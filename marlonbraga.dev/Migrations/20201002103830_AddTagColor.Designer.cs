// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using marlonbraga.dev.Models.Context;

namespace marlonbraga.dev.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201002103830_AddTagColor")]
    partial class AddTagColor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("marlonbraga.dev.Models.Post", b =>
                {
                    b.Property<int>("IdPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TumbNail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IdPost");

                    b.ToTable("post");
                });

            modelBuilder.Entity("marlonbraga.dev.Models.PostTag", b =>
                {
                    b.Property<int>("IdPost")
                        .HasColumnType("int");

                    b.Property<int>("IdTag")
                        .HasColumnType("int");

                    b.HasKey("IdPost", "IdTag");

                    b.HasIndex("IdTag");

                    b.ToTable("postTag");
                });

            modelBuilder.Entity("marlonbraga.dev.Models.Tag", b =>
                {
                    b.Property<int>("IdTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PostIdPost")
                        .HasColumnType("int");

                    b.HasKey("IdTag");

                    b.HasIndex("PostIdPost");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("marlonbraga.dev.Models.PostTag", b =>
                {
                    b.HasOne("marlonbraga.dev.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("IdPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("marlonbraga.dev.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("IdTag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marlonbraga.dev.Models.Tag", b =>
                {
                    b.HasOne("marlonbraga.dev.Models.Post", null)
                        .WithMany("Tags")
                        .HasForeignKey("PostIdPost");
                });
#pragma warning restore 612, 618
        }
    }
}
