@model marlonbraga.dev.Models.Post

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <link rel="stylesheet" href="~/css/CreateAndEdit.css" />
    <script src="https://cdn.tiny.cloud/1/qwe97nvfgyx0gx3aehbk6urvlwhvlljfr2cgu24xyivowxk2/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            tinymce.init({
                selector: '#mytextarea',
                plugins: [
                    'advlist autolink lists link image charmap print preview anchor',
                    'searchreplace visualblocks code fullscreen',
                    'insertdatetime media table paste imagetools wordcount'
                ],
                toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
                /* enable title field in the Image dialog*/
                image_title: true,
                /* enable automatic uploads of images represented by blob or data URIs*/
                automatic_uploads: false,
                images_upload_url: 'UploadHandler.ashx',
                file_picker_types: 'image',
                /* and here's our custom image picker*/
                file_picker_callback: function (cb, value, meta) {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'file');
                    input.setAttribute('accept', 'image/*');
                    input.onchange = function () {
                        var file = this.files[0];

                        var reader = new FileReader();
                        reader.onload = function () {
                            /*
                              Note: Now we need to register the blob in TinyMCEs image blob
                              registry. In the next release this part hopefully won't be
                              necessary, as we are looking to handle it internally.
                            */
                            var id = 'blobid' + (new Date()).getTime();
                            var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                            var base64 = reader.result.split(',')[1];
                            var blobInfo = blobCache.create(id, file, base64);
                            blobCache.add(blobInfo);

                            /* call the callback and populate the Title field with the file name */
                            cb(blobInfo.blobUri(), { title: file.name });
                        };
                        reader.readAsDataURL(file);
                    };
                    input.click();
                },
                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
                images_upload_handler: function (blobInfo, success, failure) {
                    var xhr, formData;
                    xhr = new XMLHttpRequest();
                    xhr.withCredentials = false;
                    xhr.open('POST', '\UploadHandler.ashx');
                    xhr.onload = function () {
                        var json;
                        if (xhr.status != 200) {
                            failure('HTTP Error: ' + xhr.status);
                            return;
                        }
                        json = xhr.responseText;
                        success(json);
                    };
                    formData = new FormData();
                    formData.append('file', blobInfo.blob(), blobInfo.filename());
                    xhr.send(formData);
                }
            });
            const inpFile = document.getElementById("inpFile");
            const previewContainer = document.getElementById("imagePreview");
            const previewImage = previewContainer.querySelector(".image-preview__image");
            const previewDefaultText = previewContainer.querySelector(".image-preview__default-text");

            UpdateTagsIdHiddenInput();

            //Pass tags selected
            $("input[type='checkbox']").change(function () {
                UpdateTagsIdHiddenInput();
            });

            inpFile.addEventListener("change", function () {
                const file = this.files[0];

                if (file) {
                    const reader = new FileReader();

                    previewDefaultText.style.display = "none";
                    previewImage.style.display = "block";

                    reader.addEventListener("load", function () {
                        previewImage.setAttribute("src", this.result);
                    });

                    reader.readAsDataURL(file);
                }
                else
                {
                    previewDefaultText.style.display = null;
                    previewImage.style.display = null;
                    previewImage.setAttribute("src", "");
                }
            });
        });
        function UpdateTagsIdHiddenInput() {
            var tags = "";
            $("input[type='checkbox']").each(function () {
                if ($(this).is(':checked'))
                    tags += $(this).val() + ",";
            });
            $("#TagsId").val(tags);
        }
    </script>
    <style>
        .image-preview {
            min-height: 180px;
            border: 2px solid #5B9BD5;
            margin-top: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #5B9BD5;
        }

        .image-preview__image {
            display: none;
            width: 100%;
            height: 100%;
        }

        .badge-checkboxes .checkbox input[type="checkbox"],
        .badge-checkboxes label.checkbox-inline input[type="checkbox"] {
            /*Hide the checkbox, but keeps tabbing to it possible. */
            position: absolute;
            clip: rect(0 0 0 0);
        }

        .badge-checkboxes .checkbox label,
        .badge-checkboxes label.checkbox-inline {
            padding-left: 0; /* Remove space normally used for the checkbox */
        }

            .badge-checkboxes .checkbox input[type="checkbox"] + .badge,
            .badge-checkboxes label.checkbox-inline input[type="checkbox"] + .badge {
                background-color: #5B9BD5;
                border: 2px solid #5B9BD5; /* Add outline to badge */
                color: white;
                /* Make text in badge not selectable */
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            /* Remove badge background-color and set text color for not checked options */
            .badge-checkboxes .checkbox input[type="checkbox"]:not(:checked) + .badge,
            .badge-checkboxes label.checkbox-inline input[type="checkbox"]:not(:checked) + .badge {
                background-color: Transparent;
                border: 2px solid #5B9BD5;
                color: #5B9BD5;
            }

        /*The following css only required for Bootstrap <= 3.1.0 */
        .badge-checkboxes .checkbox {
            padding-left: 0; /* Remove space normally used for the checkbox */
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h4>Editar Post</h4>
        <hr />
        <div class="row">
            <div class="col-md">
                <form asp-action="Edit" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-lg-12">
                            @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
                            <input type="hidden" asp-for="IdPost" />
                            <input type="hidden" asp-for="TumbNail" />
                            <div class="form-group">
                                <input asp-for="Title" class="h1 form-control" />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input asp-for="Description" class="h5 form-control" />
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md">
                            <div class="form-group">
                                <input asp-for="ImageFile" type="file" accept="image/*" id="inpFile">
                                <div class="image-preview" id="imagePreview">
                                    <img src="/img/headers/@Model.TumbNail" alt="Image Preview" class="image-preview__image" style="display:block"/>
                                    <span class="image-preview__default-text"></span>
                                </div>
                                <span asp-validation-for="ImageFile" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md">
                            <div class="form-group">
                                <input asp-for="PublicationDate" class="form-control" />
                                <span asp-validation-for="PublicationDate" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input asp-for="VideoLink" class="form-control" />
                                <span asp-validation-for="VideoLink" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3 badge-checkboxes">
                                <div class="checkbox card-body tags">
                                    <h5 style="margin: 0px 2px 2px auto; font-size:2.0rem;">
                                        @{int i = 0;}
                                        @foreach(var tag in ViewBag.Tags) {
                                            <label>
                                                @{
                                                    string isChecked = "";
                                                    foreach(var item in Model.Tags) {
                                                        if(item.IdTag == tag.IdTag) {
                                                            isChecked = "checked";
                                                            break;
                                                        }
                                                    }
                                                }
                                                <input type="checkbox" id="checkbox@(i)" name="checkbox@(i)" @isChecked value="@tag.IdTag">
                                                <span class="badge">@tag.Name</span>
                                            </label>
                                        }
                                    </h5>
                                    <input asp-for="TagsId" id="TagsId" type="hidden" value="" />
                                </div>
                                <span asp-validation-for="Tags" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <textarea id="mytextarea" asp-for="Content" class="form-control" value=""></textarea>
                                <span asp-validation-for="Content" class="text-danger"></span>
                            </div>
                            <div class="form-group" style="text-align:center;">
                                <input type="submit" value="Alterar" class="btn btn-primary" />
                                <a class="btn btn-outline-primary" asp-action="Index">Cancelar</a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        @section Scripts {
            @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        }
    </div>
</body>
</html>
